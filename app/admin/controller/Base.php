<?php
namespace app\admin\controller;

use app\BaseController;
use app\models\Nodes;
use think\Exception;
use think\facade\Db;
use think\facade\View;

class Base extends BaseController
{
    private $userId=0;
    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $logedUser = session("user");
        if(empty($logedUser)) {
            redirect(admin_link("Login/index"))->send();exit;
        }

        $this->userId = $logedUser["userid"];

        $data["adminNodes"] = $this->getAuthNodes();
        $data["headerNodes"] = Nodes::getHeaderNodes();
        $data["currentUrl"] = request()->url();
        $data["domain"] = request()->domain();
        View::assign($data);
        View::assign("loginuser", $logedUser["username"]);

    }

    public function getAuthNodes()
    {
        $nodes = \app\models\Nodes::getNodes();
        $user = Db::name(\app\models\User::$tablename)->where("userid", $this->userId)->find();
        if($user["username"] == "admin") {
            return $nodes;
        }

        $roleid = $user["roleid"];

        if(empty($roleid)) {
            redirect(admin_link("Login/index"))->send();exit;
        }

        $limits = Db::name("roles")->where("roleid", $roleid)->value("limits");
        $authedNodes = explode(",", $limits);
        if(!empty($nodes)) {
            foreach($nodes as $nodeid => $node) {
                if(!in_array($nodeid, $authedNodes)) {
                    unset($nodes[$nodeid]);
                }
                if(isset($node["child"]) && !empty($node["child"])) {
                    foreach($node["child"] as $snodeid => $snode) {
                        if (!in_array($snodeid, $authedNodes)) {
                            unset($nodes[$nodeid]["child"][$snodeid]);
                        }
                    }
                }
            }
        }
        return $nodes;
    }

    public function getUserId()
    {
        return $this->userId;
    }

    public function upload()
    {
        try {
            if(isset($_FILES['upload'])) {
                $file = request()->file('upload');
            } elseif(isset($_FILES['file'])) {
                $file = request()->file('file');
            }
            $savename = \think\facade\Filesystem::disk("public")->putFile( 'images', $file);
            toJSON([
                "fileName" => $file->getOriginalName(),
                "uploaded" => 1,
                "code" => 0,
                "saveName" => str_replace("\\", "/", $savename),
                "url" => showfile($savename),
            ]);
        } catch (Exception $ex) {
            toJSON([
                "fileName" => '',
                "uploaded" => 0,
                "code" => 1,
                "saveName" => "",
                "msg" => $ex->getMessage(),
                "url" => '',
            ]);
        }

    }
}
